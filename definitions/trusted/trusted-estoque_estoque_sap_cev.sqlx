config {
    dependencies: ["estoque_estoque_sap_cev"],
    tags: ["sqlserver"]
}

MERGE
  `TRUSTED.estoque_estoque_sap_cev` T
USING
  (
  WITH
    TABELA AS (
    SELECT
      DISTINCT * EXCEPT (dense_rank,
        PARTITIONTIME)
    FROM (
      SELECT
        ROW_NUMBER() OVER (PARTITION BY COD_ITPROD, COD_FILIAL ORDER BY PARTITIONTIME DESC) AS dense_rank,
        CAST(COD_ITPROD AS INT64) AS COD_ITPROD,
        CAST(COD_FILIAL AS INT64) AS COD_FILIAL,
        CAST(QTD_DISPONIVEL AS INT64) AS QTD_DISPONIVEL,
        CAST(QTD_TRANSITO AS INT64) AS QTD_TRANSITO,
        CAST(QTD_FUTURO AS INT64) AS QTD_FUTURO,
        CAST(QTD_RESERVA AS INT64) AS QTD_RESERVA,
        CAST(DAT_ULTIMA_ALTERACAO AS DATETIME) AS DAT_ULTIMA_ALTERACAO,		
        CAST(COD_OPERACAO_SINCRONISMO_LOJA AS INT64) AS COD_OPERACAO_SINCRONISMO_LOJA,		
        PARTITIONTIME
      FROM (
        SELECT
          DISTINCT A.*
        FROM
          `RAW.estoque_estoque_sap_cev` A))
    WHERE
      dense_rank = 1 )
  SELECT
    *
  FROM
    TABELA) S
ON
  T.COD_ITPROD = S.COD_ITPROD
  AND T.COD_FILIAL = S.COD_FILIAL
  AND T.QTD_DISPONIVEL = S.QTD_DISPONIVEL
  WHEN MATCHED THEN UPDATE SET 
  T.COD_ITPROD = S.COD_ITPROD,  
  T.COD_FILIAL = S.COD_FILIAL, 
  T.QTD_DISPONIVEL = S.QTD_DISPONIVEL, 
  T.QTD_TRANSITO = S.QTD_TRANSITO, 
  T.QTD_FUTURO = S.QTD_FUTURO, 
  T.QTD_RESERVA = S.QTD_RESERVA,
  T.DAT_ULTIMA_ALTERACAO = S.DAT_ULTIMA_ALTERACAO, 
  T.COD_OPERACAO_SINCRONISMO_LOJA = S.COD_OPERACAO_SINCRONISMO_LOJA   
  WHEN NOT MATCHED
  THEN
INSERT
  ( COD_ITPROD, 
    COD_FILIAL,
    QTD_DISPONIVEL,
    QTD_TRANSITO,
    QTD_FUTURO,
    QTD_RESERVA,
	DAT_ULTIMA_ALTERACAO,
	COD_OPERACAO_SINCRONISMO_LOJA
	)
VALUES
  ( S.COD_ITPROD, S.COD_FILIAL, S.QTD_DISPONIVEL, S.QTD_TRANSITO, S.QTD_FUTURO, S.QTD_RESERVA,S.DAT_ULTIMA_ALTERACAO,S.COD_OPERACAO_SINCRONISMO_LOJA )
  WHEN NOT MATCHED BY SOURCE
  THEN
DELETE
  ;
